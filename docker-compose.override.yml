version: '3.4'
#volumes:
#  portainer:
#    external: true
services:
  cartdb:
    container_name: cartdb
    restart: always
    ports: 
      - "6379:6379"

  rabbitmq:
    container_name: rabbitmq
    restart: always
    ports: 
      - "5672:5672"
      - "15672:15672"



  #portainer:
  #  container_name: portainer
  #  restart: always
  #  ports:
  #    - "8080:8000"
  #    - "9000:9000"
  #  volumes:
  #    - /var/run/docker.sock:/var/run/docker.sock
  #    - portainer_data:/data
  orderdb:
    container_name: orderdb
    environment:
        SA_PASSWORD: "SwN12345678"
        ACCEPT_EULA: "Y"
    restart: always
    ports:
        - "1433:1433"
 
      
  #publicutilities.api:
  #  environment:
  #    - ASPNETCORE_ENVIRONMENT=Development
  #    - "CacheSettings:ConnectionString=cartdb:6379"
  #  depends_on:
  #  - cartdb 
  #  ports:
  #    - "6001:80"
  publicutilities.api:
    #container_name: basket.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "CacheSettings:ConnectionString=cartdb:6379"

      - "EventBusSettings:HostAddress=amqp://guest:guest@rabbitmq:5672"
    depends_on:
      - cartdb
      - rabbitmq
    ports:
      - "8001:80"
  
  ordering:
    #container_name: ordering.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "ConnectionStrings:OrderingConnectionString=Server=orderdb;Database=OrderDb;User Id=sa;Password=SwN12345678"  
      - "EventBusSettings:HostAddress=amqp://guest:guest@rabbitmq:5672"
    depends_on:
        - orderdb
        - rabbitmq
    ports:
        - "8004:80"
  #ordering:
  #  environment:
  #    - ASPNETCORE_ENVIRONMENT=Development
  #  ports:
  #    - "80"


